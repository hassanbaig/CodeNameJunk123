//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JunkCar.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class shiner49_JunkCarEntities : DbContext
    {
        public shiner49_JunkCarEntities()
            : base("name=shiner49_JunkCarEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Sal_Customer> Sal_Customer { get; set; }
        public virtual DbSet<Sal_Customer_Contact> Sal_Customer_Contact { get; set; }
        public virtual DbSet<Sal_Customer_Offer> Sal_Customer_Offer { get; set; }
        public virtual DbSet<Sal_Customer_Vehicle> Sal_Customer_Vehicle { get; set; }
        public virtual DbSet<Sal_Customer_Vehicle_Doc> Sal_Customer_Vehicle_Doc { get; set; }
        public virtual DbSet<Sal_Offer> Sal_Offer { get; set; }
        public virtual DbSet<Sal_Offer_Status> Sal_Offer_Status { get; set; }
        public virtual DbSet<Sec_Role> Sec_Role { get; set; }
        public virtual DbSet<Sec_User> Sec_User { get; set; }
        public virtual DbSet<Sec_User_Contact> Sec_User_Contact { get; set; }
        public virtual DbSet<Set_Answer> Set_Answer { get; set; }
        public virtual DbSet<Set_Audit_Log> Set_Audit_Log { get; set; }
        public virtual DbSet<Set_City> Set_City { get; set; }
        public virtual DbSet<Set_Contact_Type> Set_Contact_Type { get; set; }
        public virtual DbSet<Set_Country> Set_Country { get; set; }
        public virtual DbSet<Set_County> Set_County { get; set; }
        public virtual DbSet<Set_Document> Set_Document { get; set; }
        public virtual DbSet<Set_Make> Set_Make { get; set; }
        public virtual DbSet<Set_Model> Set_Model { get; set; }
        public virtual DbSet<Set_Model_Year> Set_Model_Year { get; set; }
        public virtual DbSet<Set_Question> Set_Question { get; set; }
        public virtual DbSet<Set_Questionnaire> Set_Questionnaire { get; set; }
        public virtual DbSet<Set_Questionnaire_Detail> Set_Questionnaire_Detail { get; set; }
        public virtual DbSet<Set_Questionnaire_Result> Set_Questionnaire_Result { get; set; }
        public virtual DbSet<Set_Questionnaire_Result_Detail> Set_Questionnaire_Result_Detail { get; set; }
        public virtual DbSet<Set_Site> Set_Site { get; set; }
        public virtual DbSet<Set_Site_Contact> Set_Site_Contact { get; set; }
        public virtual DbSet<Set_State> Set_State { get; set; }
        public virtual DbSet<Set_Zip_Code> Set_Zip_Code { get; set; }
    
        public virtual int usp_Generate_Questionnaire_Result(Nullable<int> questionnaire_Id)
        {
            var questionnaire_IdParameter = questionnaire_Id.HasValue ?
                new ObjectParameter("Questionnaire_Id", questionnaire_Id) :
                new ObjectParameter("Questionnaire_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Generate_Questionnaire_Result", questionnaire_IdParameter);
        }
    
        public virtual ObjectResult<usp_Sal_Customer_Result> usp_Sal_Customer(Nullable<decimal> action_Type, ObjectParameter customer_Id, string customer_Code, string customer_Name, Nullable<int> assigned_User_Code, Nullable<int> currency_Id, Nullable<byte> is_Active, Nullable<System.DateTime> created_Date, Nullable<int> created_By, Nullable<System.DateTime> modified_Date, Nullable<int> modified_By, Nullable<long> audit_Id, string user_IP, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var customer_CodeParameter = customer_Code != null ?
                new ObjectParameter("Customer_Code", customer_Code) :
                new ObjectParameter("Customer_Code", typeof(string));
    
            var customer_NameParameter = customer_Name != null ?
                new ObjectParameter("Customer_Name", customer_Name) :
                new ObjectParameter("Customer_Name", typeof(string));
    
            var assigned_User_CodeParameter = assigned_User_Code.HasValue ?
                new ObjectParameter("Assigned_User_Code", assigned_User_Code) :
                new ObjectParameter("Assigned_User_Code", typeof(int));
    
            var currency_IdParameter = currency_Id.HasValue ?
                new ObjectParameter("Currency_Id", currency_Id) :
                new ObjectParameter("Currency_Id", typeof(int));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(byte));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Sal_Customer_Result>("usp_Sal_Customer", action_TypeParameter, customer_Id, customer_CodeParameter, customer_NameParameter, assigned_User_CodeParameter, currency_IdParameter, is_ActiveParameter, created_DateParameter, created_ByParameter, modified_DateParameter, modified_ByParameter, audit_IdParameter, user_IPParameter, site_IdParameter);
        }
    
        public virtual ObjectResult<usp_Sal_Customer_Contact_Result> usp_Sal_Customer_Contact(Nullable<decimal> action_Type, ObjectParameter customer_Contact_Id, Nullable<int> customer_Id, Nullable<int> contact_Type_Id, Nullable<bool> is_Default, string customer_Contact, Nullable<int> city_Id, Nullable<int> state_Id, Nullable<int> country_Id, string zip_Code, Nullable<short> sort_Order, Nullable<int> created_By, Nullable<System.DateTime> created_Date, Nullable<int> modified_By, Nullable<System.DateTime> modified_Date, Nullable<byte> is_Active, string user_IP, Nullable<long> audit_Id, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var customer_IdParameter = customer_Id.HasValue ?
                new ObjectParameter("Customer_Id", customer_Id) :
                new ObjectParameter("Customer_Id", typeof(int));
    
            var contact_Type_IdParameter = contact_Type_Id.HasValue ?
                new ObjectParameter("Contact_Type_Id", contact_Type_Id) :
                new ObjectParameter("Contact_Type_Id", typeof(int));
    
            var is_DefaultParameter = is_Default.HasValue ?
                new ObjectParameter("Is_Default", is_Default) :
                new ObjectParameter("Is_Default", typeof(bool));
    
            var customer_ContactParameter = customer_Contact != null ?
                new ObjectParameter("Customer_Contact", customer_Contact) :
                new ObjectParameter("Customer_Contact", typeof(string));
    
            var city_IdParameter = city_Id.HasValue ?
                new ObjectParameter("City_Id", city_Id) :
                new ObjectParameter("City_Id", typeof(int));
    
            var state_IdParameter = state_Id.HasValue ?
                new ObjectParameter("State_Id", state_Id) :
                new ObjectParameter("State_Id", typeof(int));
    
            var country_IdParameter = country_Id.HasValue ?
                new ObjectParameter("Country_Id", country_Id) :
                new ObjectParameter("Country_Id", typeof(int));
    
            var zip_CodeParameter = zip_Code != null ?
                new ObjectParameter("Zip_Code", zip_Code) :
                new ObjectParameter("Zip_Code", typeof(string));
    
            var sort_OrderParameter = sort_Order.HasValue ?
                new ObjectParameter("Sort_Order", sort_Order) :
                new ObjectParameter("Sort_Order", typeof(short));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(byte));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Sal_Customer_Contact_Result>("usp_Sal_Customer_Contact", action_TypeParameter, customer_Contact_Id, customer_IdParameter, contact_Type_IdParameter, is_DefaultParameter, customer_ContactParameter, city_IdParameter, state_IdParameter, country_IdParameter, zip_CodeParameter, sort_OrderParameter, created_ByParameter, created_DateParameter, modified_ByParameter, modified_DateParameter, is_ActiveParameter, user_IPParameter, audit_IdParameter, site_IdParameter);
        }
    
        public virtual ObjectResult<usp_Sal_Customer_Offer_Result> usp_Sal_Customer_Offer(Nullable<decimal> action_Type, ObjectParameter customer_Offer_Id, Nullable<int> customer_Id, string customer_Code, string customer_Name, Nullable<int> make_Id, Nullable<int> model_Id, Nullable<int> registeration_Year, Nullable<int> questionnaire_Id, Nullable<int> offer_Id, Nullable<System.DateTime> offer_Date, Nullable<int> offer_Status_Id, Nullable<int> initial_Offer_Price, Nullable<int> offer_Price, Nullable<int> user_Code, string remarks, Nullable<byte> is_Active, Nullable<System.DateTime> created_Date, Nullable<int> created_By, Nullable<System.DateTime> modified_Date, Nullable<int> modified_By, Nullable<long> audit_Id, string user_IP, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var customer_IdParameter = customer_Id.HasValue ?
                new ObjectParameter("Customer_Id", customer_Id) :
                new ObjectParameter("Customer_Id", typeof(int));
    
            var customer_CodeParameter = customer_Code != null ?
                new ObjectParameter("Customer_Code", customer_Code) :
                new ObjectParameter("Customer_Code", typeof(string));
    
            var customer_NameParameter = customer_Name != null ?
                new ObjectParameter("Customer_Name", customer_Name) :
                new ObjectParameter("Customer_Name", typeof(string));
    
            var make_IdParameter = make_Id.HasValue ?
                new ObjectParameter("Make_Id", make_Id) :
                new ObjectParameter("Make_Id", typeof(int));
    
            var model_IdParameter = model_Id.HasValue ?
                new ObjectParameter("Model_Id", model_Id) :
                new ObjectParameter("Model_Id", typeof(int));
    
            var registeration_YearParameter = registeration_Year.HasValue ?
                new ObjectParameter("Registeration_Year", registeration_Year) :
                new ObjectParameter("Registeration_Year", typeof(int));
    
            var questionnaire_IdParameter = questionnaire_Id.HasValue ?
                new ObjectParameter("Questionnaire_Id", questionnaire_Id) :
                new ObjectParameter("Questionnaire_Id", typeof(int));
    
            var offer_IdParameter = offer_Id.HasValue ?
                new ObjectParameter("Offer_Id", offer_Id) :
                new ObjectParameter("Offer_Id", typeof(int));
    
            var offer_DateParameter = offer_Date.HasValue ?
                new ObjectParameter("Offer_Date", offer_Date) :
                new ObjectParameter("Offer_Date", typeof(System.DateTime));
    
            var offer_Status_IdParameter = offer_Status_Id.HasValue ?
                new ObjectParameter("Offer_Status_Id", offer_Status_Id) :
                new ObjectParameter("Offer_Status_Id", typeof(int));
    
            var initial_Offer_PriceParameter = initial_Offer_Price.HasValue ?
                new ObjectParameter("Initial_Offer_Price", initial_Offer_Price) :
                new ObjectParameter("Initial_Offer_Price", typeof(int));
    
            var offer_PriceParameter = offer_Price.HasValue ?
                new ObjectParameter("Offer_Price", offer_Price) :
                new ObjectParameter("Offer_Price", typeof(int));
    
            var user_CodeParameter = user_Code.HasValue ?
                new ObjectParameter("User_Code", user_Code) :
                new ObjectParameter("User_Code", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(byte));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Sal_Customer_Offer_Result>("usp_Sal_Customer_Offer", action_TypeParameter, customer_Offer_Id, customer_IdParameter, customer_CodeParameter, customer_NameParameter, make_IdParameter, model_IdParameter, registeration_YearParameter, questionnaire_IdParameter, offer_IdParameter, offer_DateParameter, offer_Status_IdParameter, initial_Offer_PriceParameter, offer_PriceParameter, user_CodeParameter, remarksParameter, is_ActiveParameter, created_DateParameter, created_ByParameter, modified_DateParameter, modified_ByParameter, audit_IdParameter, user_IPParameter, site_IdParameter);
        }
    
        public virtual ObjectResult<usp_Sal_Customer_Vehicle_Result> usp_Sal_Customer_Vehicle(Nullable<decimal> action_Type, ObjectParameter customer_Vehicle_Id, Nullable<int> customer_Offer_Id, string registration_No, Nullable<int> registration_Year, Nullable<int> manufacturing_Year, string insurance_No, string inspection_No, string image_Path, Nullable<int> image_Count, string remarks, Nullable<byte> is_Active, Nullable<System.DateTime> created_Date, Nullable<int> created_By, Nullable<System.DateTime> modified_Date, Nullable<int> modified_By, Nullable<long> audit_Id, string user_IP, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var customer_Offer_IdParameter = customer_Offer_Id.HasValue ?
                new ObjectParameter("Customer_Offer_Id", customer_Offer_Id) :
                new ObjectParameter("Customer_Offer_Id", typeof(int));
    
            var registration_NoParameter = registration_No != null ?
                new ObjectParameter("Registration_No", registration_No) :
                new ObjectParameter("Registration_No", typeof(string));
    
            var registration_YearParameter = registration_Year.HasValue ?
                new ObjectParameter("Registration_Year", registration_Year) :
                new ObjectParameter("Registration_Year", typeof(int));
    
            var manufacturing_YearParameter = manufacturing_Year.HasValue ?
                new ObjectParameter("Manufacturing_Year", manufacturing_Year) :
                new ObjectParameter("Manufacturing_Year", typeof(int));
    
            var insurance_NoParameter = insurance_No != null ?
                new ObjectParameter("Insurance_No", insurance_No) :
                new ObjectParameter("Insurance_No", typeof(string));
    
            var inspection_NoParameter = inspection_No != null ?
                new ObjectParameter("Inspection_No", inspection_No) :
                new ObjectParameter("Inspection_No", typeof(string));
    
            var image_PathParameter = image_Path != null ?
                new ObjectParameter("Image_Path", image_Path) :
                new ObjectParameter("Image_Path", typeof(string));
    
            var image_CountParameter = image_Count.HasValue ?
                new ObjectParameter("Image_Count", image_Count) :
                new ObjectParameter("Image_Count", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(byte));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Sal_Customer_Vehicle_Result>("usp_Sal_Customer_Vehicle", action_TypeParameter, customer_Vehicle_Id, customer_Offer_IdParameter, registration_NoParameter, registration_YearParameter, manufacturing_YearParameter, insurance_NoParameter, inspection_NoParameter, image_PathParameter, image_CountParameter, remarksParameter, is_ActiveParameter, created_DateParameter, created_ByParameter, modified_DateParameter, modified_ByParameter, audit_IdParameter, user_IPParameter, site_IdParameter);
        }
    
        public virtual ObjectResult<usp_Sal_Customer_Vehicle_Doc_Result> usp_Sal_Customer_Vehicle_Doc(Nullable<decimal> action_Type, ObjectParameter customer_Vehicle_Doc_Id, Nullable<int> customer_Vehicle_Id, Nullable<int> document_Id, string document_No, string document_Path, string document_Details, string remarks, Nullable<byte> is_Active, Nullable<System.DateTime> created_Date, Nullable<int> created_By, Nullable<System.DateTime> modified_Date, Nullable<int> modified_By, Nullable<long> audit_Id, string user_IP, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var customer_Vehicle_IdParameter = customer_Vehicle_Id.HasValue ?
                new ObjectParameter("Customer_Vehicle_Id", customer_Vehicle_Id) :
                new ObjectParameter("Customer_Vehicle_Id", typeof(int));
    
            var document_IdParameter = document_Id.HasValue ?
                new ObjectParameter("Document_Id", document_Id) :
                new ObjectParameter("Document_Id", typeof(int));
    
            var document_NoParameter = document_No != null ?
                new ObjectParameter("Document_No", document_No) :
                new ObjectParameter("Document_No", typeof(string));
    
            var document_PathParameter = document_Path != null ?
                new ObjectParameter("Document_Path", document_Path) :
                new ObjectParameter("Document_Path", typeof(string));
    
            var document_DetailsParameter = document_Details != null ?
                new ObjectParameter("Document_Details", document_Details) :
                new ObjectParameter("Document_Details", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(byte));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Sal_Customer_Vehicle_Doc_Result>("usp_Sal_Customer_Vehicle_Doc", action_TypeParameter, customer_Vehicle_Doc_Id, customer_Vehicle_IdParameter, document_IdParameter, document_NoParameter, document_PathParameter, document_DetailsParameter, remarksParameter, is_ActiveParameter, created_DateParameter, created_ByParameter, modified_DateParameter, modified_ByParameter, audit_IdParameter, user_IPParameter, site_IdParameter);
        }
    
        public virtual ObjectResult<usp_Sal_Offer_Result> usp_Sal_Offer(Nullable<decimal> action_Type, ObjectParameter offer_Id, Nullable<int> model_Year_Id, Nullable<int> zip_Id, Nullable<int> questionnaire_Id, Nullable<int> questionnaire_Result_Id, Nullable<int> offer_Price, Nullable<bool> is_Negotiable, string remarks, Nullable<byte> is_Active, Nullable<System.DateTime> created_Date, Nullable<int> created_By, Nullable<System.DateTime> modified_Date, Nullable<int> modified_By, Nullable<long> audit_Id, string user_IP, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var model_Year_IdParameter = model_Year_Id.HasValue ?
                new ObjectParameter("Model_Year_Id", model_Year_Id) :
                new ObjectParameter("Model_Year_Id", typeof(int));
    
            var zip_IdParameter = zip_Id.HasValue ?
                new ObjectParameter("Zip_Id", zip_Id) :
                new ObjectParameter("Zip_Id", typeof(int));
    
            var questionnaire_IdParameter = questionnaire_Id.HasValue ?
                new ObjectParameter("Questionnaire_Id", questionnaire_Id) :
                new ObjectParameter("Questionnaire_Id", typeof(int));
    
            var questionnaire_Result_IdParameter = questionnaire_Result_Id.HasValue ?
                new ObjectParameter("Questionnaire_Result_Id", questionnaire_Result_Id) :
                new ObjectParameter("Questionnaire_Result_Id", typeof(int));
    
            var offer_PriceParameter = offer_Price.HasValue ?
                new ObjectParameter("Offer_Price", offer_Price) :
                new ObjectParameter("Offer_Price", typeof(int));
    
            var is_NegotiableParameter = is_Negotiable.HasValue ?
                new ObjectParameter("Is_Negotiable", is_Negotiable) :
                new ObjectParameter("Is_Negotiable", typeof(bool));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(byte));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Sal_Offer_Result>("usp_Sal_Offer", action_TypeParameter, offer_Id, model_Year_IdParameter, zip_IdParameter, questionnaire_IdParameter, questionnaire_Result_IdParameter, offer_PriceParameter, is_NegotiableParameter, remarksParameter, is_ActiveParameter, created_DateParameter, created_ByParameter, modified_DateParameter, modified_ByParameter, audit_IdParameter, user_IPParameter, site_IdParameter);
        }
    
        public virtual ObjectResult<usp_Sal_Offer_Status_Result> usp_Sal_Offer_Status(Nullable<decimal> action_Type, ObjectParameter offer_Status_Id, string offer_Status, Nullable<short> sort_Order, Nullable<byte> is_Active, Nullable<System.DateTime> created_Date, Nullable<int> created_By, Nullable<System.DateTime> modified_Date, Nullable<int> modified_By, Nullable<long> audit_Id, string user_IP, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var offer_StatusParameter = offer_Status != null ?
                new ObjectParameter("Offer_Status", offer_Status) :
                new ObjectParameter("Offer_Status", typeof(string));
    
            var sort_OrderParameter = sort_Order.HasValue ?
                new ObjectParameter("Sort_Order", sort_Order) :
                new ObjectParameter("Sort_Order", typeof(short));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(byte));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Sal_Offer_Status_Result>("usp_Sal_Offer_Status", action_TypeParameter, offer_Status_Id, offer_StatusParameter, sort_OrderParameter, is_ActiveParameter, created_DateParameter, created_ByParameter, modified_DateParameter, modified_ByParameter, audit_IdParameter, user_IPParameter, site_IdParameter);
        }
    
        public virtual ObjectResult<usp_Sal_Suggested_Offer_Result> usp_Sal_Suggested_Offer(Nullable<int> registration_Year, Nullable<int> make_Id, Nullable<int> model_Id, string questioneer, string zip_Code, string customer_Info)
        {
            var registration_YearParameter = registration_Year.HasValue ?
                new ObjectParameter("Registration_Year", registration_Year) :
                new ObjectParameter("Registration_Year", typeof(int));
    
            var make_IdParameter = make_Id.HasValue ?
                new ObjectParameter("Make_Id", make_Id) :
                new ObjectParameter("Make_Id", typeof(int));
    
            var model_IdParameter = model_Id.HasValue ?
                new ObjectParameter("Model_Id", model_Id) :
                new ObjectParameter("Model_Id", typeof(int));
    
            var questioneerParameter = questioneer != null ?
                new ObjectParameter("Questioneer", questioneer) :
                new ObjectParameter("Questioneer", typeof(string));
    
            var zip_CodeParameter = zip_Code != null ?
                new ObjectParameter("Zip_Code", zip_Code) :
                new ObjectParameter("Zip_Code", typeof(string));
    
            var customer_InfoParameter = customer_Info != null ?
                new ObjectParameter("Customer_Info", customer_Info) :
                new ObjectParameter("Customer_Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Sal_Suggested_Offer_Result>("usp_Sal_Suggested_Offer", registration_YearParameter, make_IdParameter, model_IdParameter, questioneerParameter, zip_CodeParameter, customer_InfoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_Sal_Suggested_Offer_Select(Nullable<int> registration_Year, Nullable<int> make_Id, Nullable<int> model_Id, string questioneer, string zip_Code, string customer_Info)
        {
            var registration_YearParameter = registration_Year.HasValue ?
                new ObjectParameter("Registration_Year", registration_Year) :
                new ObjectParameter("Registration_Year", typeof(int));
    
            var make_IdParameter = make_Id.HasValue ?
                new ObjectParameter("Make_Id", make_Id) :
                new ObjectParameter("Make_Id", typeof(int));
    
            var model_IdParameter = model_Id.HasValue ?
                new ObjectParameter("Model_Id", model_Id) :
                new ObjectParameter("Model_Id", typeof(int));
    
            var questioneerParameter = questioneer != null ?
                new ObjectParameter("Questioneer", questioneer) :
                new ObjectParameter("Questioneer", typeof(string));
    
            var zip_CodeParameter = zip_Code != null ?
                new ObjectParameter("Zip_Code", zip_Code) :
                new ObjectParameter("Zip_Code", typeof(string));
    
            var customer_InfoParameter = customer_Info != null ?
                new ObjectParameter("Customer_Info", customer_Info) :
                new ObjectParameter("Customer_Info", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_Sal_Suggested_Offer_Select", registration_YearParameter, make_IdParameter, model_IdParameter, questioneerParameter, zip_CodeParameter, customer_InfoParameter);
        }
    
        public virtual ObjectResult<usp_Sec_Role_Result> usp_Sec_Role(Nullable<decimal> action_Type, ObjectParameter role_Id, string role_Name, string role_Description, Nullable<short> sort_Order, Nullable<int> created_By, Nullable<System.DateTime> created_Date, Nullable<int> modified_By, Nullable<System.DateTime> modified_Date, Nullable<byte> is_Active, string user_IP, Nullable<long> audit_Id, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var role_NameParameter = role_Name != null ?
                new ObjectParameter("Role_Name", role_Name) :
                new ObjectParameter("Role_Name", typeof(string));
    
            var role_DescriptionParameter = role_Description != null ?
                new ObjectParameter("Role_Description", role_Description) :
                new ObjectParameter("Role_Description", typeof(string));
    
            var sort_OrderParameter = sort_Order.HasValue ?
                new ObjectParameter("Sort_Order", sort_Order) :
                new ObjectParameter("Sort_Order", typeof(short));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(byte));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Sec_Role_Result>("usp_Sec_Role", action_TypeParameter, role_Id, role_NameParameter, role_DescriptionParameter, sort_OrderParameter, created_ByParameter, created_DateParameter, modified_ByParameter, modified_DateParameter, is_ActiveParameter, user_IPParameter, audit_IdParameter, site_IdParameter);
        }
    
        public virtual ObjectResult<usp_Sec_User_Result> usp_Sec_User(Nullable<decimal> action_Type, ObjectParameter user_Code, string user_Login_Id, string login_Password, Nullable<int> role_Id, Nullable<int> created_By, Nullable<System.DateTime> created_Date, Nullable<int> modified_By, Nullable<System.DateTime> modified_Date, Nullable<byte> is_Active, string user_IP, Nullable<long> audit_Id, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var user_Login_IdParameter = user_Login_Id != null ?
                new ObjectParameter("User_Login_Id", user_Login_Id) :
                new ObjectParameter("User_Login_Id", typeof(string));
    
            var login_PasswordParameter = login_Password != null ?
                new ObjectParameter("Login_Password", login_Password) :
                new ObjectParameter("Login_Password", typeof(string));
    
            var role_IdParameter = role_Id.HasValue ?
                new ObjectParameter("Role_Id", role_Id) :
                new ObjectParameter("Role_Id", typeof(int));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(byte));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Sec_User_Result>("usp_Sec_User", action_TypeParameter, user_Code, user_Login_IdParameter, login_PasswordParameter, role_IdParameter, created_ByParameter, created_DateParameter, modified_ByParameter, modified_DateParameter, is_ActiveParameter, user_IPParameter, audit_IdParameter, site_IdParameter);
        }
    
        public virtual ObjectResult<usp_Sec_User_Contact_Result> usp_Sec_User_Contact(Nullable<decimal> action_Type, ObjectParameter user_Contact_Id, Nullable<int> user_Code, Nullable<int> contact_Type_Id, Nullable<bool> is_Default, string user_Contact, Nullable<int> city_Id, Nullable<int> state_Id, Nullable<int> country_Id, string zip_Code, Nullable<short> sort_Order, Nullable<int> created_By, Nullable<System.DateTime> created_Date, Nullable<int> modified_By, Nullable<System.DateTime> modified_Date, Nullable<byte> is_Active, string user_IP, Nullable<long> audit_Id, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var user_CodeParameter = user_Code.HasValue ?
                new ObjectParameter("User_Code", user_Code) :
                new ObjectParameter("User_Code", typeof(int));
    
            var contact_Type_IdParameter = contact_Type_Id.HasValue ?
                new ObjectParameter("Contact_Type_Id", contact_Type_Id) :
                new ObjectParameter("Contact_Type_Id", typeof(int));
    
            var is_DefaultParameter = is_Default.HasValue ?
                new ObjectParameter("Is_Default", is_Default) :
                new ObjectParameter("Is_Default", typeof(bool));
    
            var user_ContactParameter = user_Contact != null ?
                new ObjectParameter("User_Contact", user_Contact) :
                new ObjectParameter("User_Contact", typeof(string));
    
            var city_IdParameter = city_Id.HasValue ?
                new ObjectParameter("City_Id", city_Id) :
                new ObjectParameter("City_Id", typeof(int));
    
            var state_IdParameter = state_Id.HasValue ?
                new ObjectParameter("State_Id", state_Id) :
                new ObjectParameter("State_Id", typeof(int));
    
            var country_IdParameter = country_Id.HasValue ?
                new ObjectParameter("Country_Id", country_Id) :
                new ObjectParameter("Country_Id", typeof(int));
    
            var zip_CodeParameter = zip_Code != null ?
                new ObjectParameter("Zip_Code", zip_Code) :
                new ObjectParameter("Zip_Code", typeof(string));
    
            var sort_OrderParameter = sort_Order.HasValue ?
                new ObjectParameter("Sort_Order", sort_Order) :
                new ObjectParameter("Sort_Order", typeof(short));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(byte));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Sec_User_Contact_Result>("usp_Sec_User_Contact", action_TypeParameter, user_Contact_Id, user_CodeParameter, contact_Type_IdParameter, is_DefaultParameter, user_ContactParameter, city_IdParameter, state_IdParameter, country_IdParameter, zip_CodeParameter, sort_OrderParameter, created_ByParameter, created_DateParameter, modified_ByParameter, modified_DateParameter, is_ActiveParameter, user_IPParameter, audit_IdParameter, site_IdParameter);
        }
    
        public virtual ObjectResult<usp_Set_Answer_Result> usp_Set_Answer(Nullable<decimal> action_Type, ObjectParameter answer_Id, string answer, Nullable<short> sort_Order, Nullable<byte> is_Active, Nullable<System.DateTime> created_Date, Nullable<int> created_By, Nullable<System.DateTime> modified_Date, Nullable<int> modified_By, Nullable<long> audit_Id, string user_IP, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var answerParameter = answer != null ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(string));
    
            var sort_OrderParameter = sort_Order.HasValue ?
                new ObjectParameter("Sort_Order", sort_Order) :
                new ObjectParameter("Sort_Order", typeof(short));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(byte));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Set_Answer_Result>("usp_Set_Answer", action_TypeParameter, answer_Id, answerParameter, sort_OrderParameter, is_ActiveParameter, created_DateParameter, created_ByParameter, modified_DateParameter, modified_ByParameter, audit_IdParameter, user_IPParameter, site_IdParameter);
        }
    
        public virtual ObjectResult<usp_Set_City_Result> usp_Set_City(Nullable<decimal> action_Type, ObjectParameter city_Id, string city_Code, string city_Name, Nullable<int> county_Id, Nullable<int> state_Id, Nullable<int> country_Id, Nullable<byte> is_Active, Nullable<System.DateTime> created_Date, Nullable<int> created_By, Nullable<System.DateTime> modified_Date, Nullable<int> modified_By, Nullable<long> audit_Id, string user_IP, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var city_CodeParameter = city_Code != null ?
                new ObjectParameter("City_Code", city_Code) :
                new ObjectParameter("City_Code", typeof(string));
    
            var city_NameParameter = city_Name != null ?
                new ObjectParameter("City_Name", city_Name) :
                new ObjectParameter("City_Name", typeof(string));
    
            var county_IdParameter = county_Id.HasValue ?
                new ObjectParameter("County_Id", county_Id) :
                new ObjectParameter("County_Id", typeof(int));
    
            var state_IdParameter = state_Id.HasValue ?
                new ObjectParameter("State_Id", state_Id) :
                new ObjectParameter("State_Id", typeof(int));
    
            var country_IdParameter = country_Id.HasValue ?
                new ObjectParameter("Country_Id", country_Id) :
                new ObjectParameter("Country_Id", typeof(int));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(byte));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Set_City_Result>("usp_Set_City", action_TypeParameter, city_Id, city_CodeParameter, city_NameParameter, county_IdParameter, state_IdParameter, country_IdParameter, is_ActiveParameter, created_DateParameter, created_ByParameter, modified_DateParameter, modified_ByParameter, audit_IdParameter, user_IPParameter, site_IdParameter);
        }
    
        public virtual ObjectResult<usp_Set_Contact_Type_Result> usp_Set_Contact_Type(Nullable<decimal> action_Type, ObjectParameter contact_Type_Id, string contact_Type, string contact_Type_Description, Nullable<bool> is_Location, Nullable<short> sort_Order, Nullable<int> created_By, Nullable<System.DateTime> created_Date, Nullable<int> modified_By, Nullable<System.DateTime> modified_Date, Nullable<byte> is_Active, string user_IP, Nullable<long> audit_Id, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var contact_TypeParameter = contact_Type != null ?
                new ObjectParameter("Contact_Type", contact_Type) :
                new ObjectParameter("Contact_Type", typeof(string));
    
            var contact_Type_DescriptionParameter = contact_Type_Description != null ?
                new ObjectParameter("Contact_Type_Description", contact_Type_Description) :
                new ObjectParameter("Contact_Type_Description", typeof(string));
    
            var is_LocationParameter = is_Location.HasValue ?
                new ObjectParameter("Is_Location", is_Location) :
                new ObjectParameter("Is_Location", typeof(bool));
    
            var sort_OrderParameter = sort_Order.HasValue ?
                new ObjectParameter("Sort_Order", sort_Order) :
                new ObjectParameter("Sort_Order", typeof(short));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(byte));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Set_Contact_Type_Result>("usp_Set_Contact_Type", action_TypeParameter, contact_Type_Id, contact_TypeParameter, contact_Type_DescriptionParameter, is_LocationParameter, sort_OrderParameter, created_ByParameter, created_DateParameter, modified_ByParameter, modified_DateParameter, is_ActiveParameter, user_IPParameter, audit_IdParameter, site_IdParameter);
        }
    
        public virtual ObjectResult<usp_Set_Country_Result> usp_Set_Country(Nullable<decimal> action_Type, ObjectParameter country_Id, string country_Code, string country_Name, Nullable<byte> is_Active, Nullable<System.DateTime> created_Date, Nullable<int> created_By, Nullable<System.DateTime> modified_Date, Nullable<int> modified_By, Nullable<long> audit_Id, string user_IP, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var country_CodeParameter = country_Code != null ?
                new ObjectParameter("Country_Code", country_Code) :
                new ObjectParameter("Country_Code", typeof(string));
    
            var country_NameParameter = country_Name != null ?
                new ObjectParameter("Country_Name", country_Name) :
                new ObjectParameter("Country_Name", typeof(string));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(byte));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Set_Country_Result>("usp_Set_Country", action_TypeParameter, country_Id, country_CodeParameter, country_NameParameter, is_ActiveParameter, created_DateParameter, created_ByParameter, modified_DateParameter, modified_ByParameter, audit_IdParameter, user_IPParameter, site_IdParameter);
        }
    
        public virtual ObjectResult<usp_Set_County_Result> usp_Set_County(Nullable<decimal> action_Type, ObjectParameter county_Id, string county_Code, string county_Name, Nullable<int> state_Id, Nullable<int> country_Id, Nullable<byte> is_Active, Nullable<System.DateTime> created_Date, Nullable<int> created_By, Nullable<System.DateTime> modified_Date, Nullable<int> modified_By, Nullable<long> audit_Id, string user_IP, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var county_CodeParameter = county_Code != null ?
                new ObjectParameter("County_Code", county_Code) :
                new ObjectParameter("County_Code", typeof(string));
    
            var county_NameParameter = county_Name != null ?
                new ObjectParameter("County_Name", county_Name) :
                new ObjectParameter("County_Name", typeof(string));
    
            var state_IdParameter = state_Id.HasValue ?
                new ObjectParameter("State_Id", state_Id) :
                new ObjectParameter("State_Id", typeof(int));
    
            var country_IdParameter = country_Id.HasValue ?
                new ObjectParameter("Country_Id", country_Id) :
                new ObjectParameter("Country_Id", typeof(int));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(byte));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Set_County_Result>("usp_Set_County", action_TypeParameter, county_Id, county_CodeParameter, county_NameParameter, state_IdParameter, country_IdParameter, is_ActiveParameter, created_DateParameter, created_ByParameter, modified_DateParameter, modified_ByParameter, audit_IdParameter, user_IPParameter, site_IdParameter);
        }
    
        public virtual int usp_Set_Default_Contact_No_Select(string zip_Code)
        {
            var zip_CodeParameter = zip_Code != null ?
                new ObjectParameter("Zip_Code", zip_Code) :
                new ObjectParameter("Zip_Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Set_Default_Contact_No_Select", zip_CodeParameter);
        }
    
        public virtual ObjectResult<usp_Set_Document_Result> usp_Set_Document(Nullable<decimal> action_Type, ObjectParameter document_Id, string document_Code, string document_Name, string document_Description, Nullable<short> sort_Order, Nullable<int> created_By, Nullable<System.DateTime> created_Date, Nullable<int> modified_By, Nullable<System.DateTime> modified_Date, Nullable<byte> is_Active, string user_IP, Nullable<long> audit_Id, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var document_CodeParameter = document_Code != null ?
                new ObjectParameter("Document_Code", document_Code) :
                new ObjectParameter("Document_Code", typeof(string));
    
            var document_NameParameter = document_Name != null ?
                new ObjectParameter("Document_Name", document_Name) :
                new ObjectParameter("Document_Name", typeof(string));
    
            var document_DescriptionParameter = document_Description != null ?
                new ObjectParameter("Document_Description", document_Description) :
                new ObjectParameter("Document_Description", typeof(string));
    
            var sort_OrderParameter = sort_Order.HasValue ?
                new ObjectParameter("Sort_Order", sort_Order) :
                new ObjectParameter("Sort_Order", typeof(short));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(byte));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Set_Document_Result>("usp_Set_Document", action_TypeParameter, document_Id, document_CodeParameter, document_NameParameter, document_DescriptionParameter, sort_OrderParameter, created_ByParameter, created_DateParameter, modified_ByParameter, modified_DateParameter, is_ActiveParameter, user_IPParameter, audit_IdParameter, site_IdParameter);
        }
    
        public virtual ObjectResult<usp_Set_Make_Result> usp_Set_Make(Nullable<decimal> action_Type, ObjectParameter make_Id, string make_Name, Nullable<short> sort_Order, Nullable<byte> is_Active, Nullable<System.DateTime> created_Date, Nullable<int> created_By, Nullable<System.DateTime> modified_Date, Nullable<int> modified_By, Nullable<long> audit_Id, string user_IP, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var make_NameParameter = make_Name != null ?
                new ObjectParameter("Make_Name", make_Name) :
                new ObjectParameter("Make_Name", typeof(string));
    
            var sort_OrderParameter = sort_Order.HasValue ?
                new ObjectParameter("Sort_Order", sort_Order) :
                new ObjectParameter("Sort_Order", typeof(short));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(byte));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Set_Make_Result>("usp_Set_Make", action_TypeParameter, make_Id, make_NameParameter, sort_OrderParameter, is_ActiveParameter, created_DateParameter, created_ByParameter, modified_DateParameter, modified_ByParameter, audit_IdParameter, user_IPParameter, site_IdParameter);
        }
    
        public virtual ObjectResult<usp_Set_Model_Result> usp_Set_Model(Nullable<decimal> action_Type, ObjectParameter model_Id, string model_Name, Nullable<int> make_Id, Nullable<short> sort_Order, Nullable<byte> is_Active, Nullable<System.DateTime> created_Date, Nullable<int> created_By, Nullable<System.DateTime> modified_Date, Nullable<int> modified_By, Nullable<long> audit_Id, string user_IP, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var model_NameParameter = model_Name != null ?
                new ObjectParameter("Model_Name", model_Name) :
                new ObjectParameter("Model_Name", typeof(string));
    
            var make_IdParameter = make_Id.HasValue ?
                new ObjectParameter("Make_Id", make_Id) :
                new ObjectParameter("Make_Id", typeof(int));
    
            var sort_OrderParameter = sort_Order.HasValue ?
                new ObjectParameter("Sort_Order", sort_Order) :
                new ObjectParameter("Sort_Order", typeof(short));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(byte));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Set_Model_Result>("usp_Set_Model", action_TypeParameter, model_Id, model_NameParameter, make_IdParameter, sort_OrderParameter, is_ActiveParameter, created_DateParameter, created_ByParameter, modified_DateParameter, modified_ByParameter, audit_IdParameter, user_IPParameter, site_IdParameter);
        }
    
        public virtual ObjectResult<usp_Set_Model_Year_Result> usp_Set_Model_Year(Nullable<decimal> action_Type, ObjectParameter model_Year_Id, Nullable<int> registration_Year, Nullable<int> make_Id, Nullable<int> model_Id, Nullable<int> offer_Price, Nullable<short> sort_Order, Nullable<byte> is_Active, Nullable<System.DateTime> created_Date, Nullable<int> created_By, Nullable<System.DateTime> modified_Date, Nullable<int> modified_By, Nullable<long> audit_Id, string user_IP, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var registration_YearParameter = registration_Year.HasValue ?
                new ObjectParameter("Registration_Year", registration_Year) :
                new ObjectParameter("Registration_Year", typeof(int));
    
            var make_IdParameter = make_Id.HasValue ?
                new ObjectParameter("Make_Id", make_Id) :
                new ObjectParameter("Make_Id", typeof(int));
    
            var model_IdParameter = model_Id.HasValue ?
                new ObjectParameter("Model_Id", model_Id) :
                new ObjectParameter("Model_Id", typeof(int));
    
            var offer_PriceParameter = offer_Price.HasValue ?
                new ObjectParameter("Offer_Price", offer_Price) :
                new ObjectParameter("Offer_Price", typeof(int));
    
            var sort_OrderParameter = sort_Order.HasValue ?
                new ObjectParameter("Sort_Order", sort_Order) :
                new ObjectParameter("Sort_Order", typeof(short));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(byte));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Set_Model_Year_Result>("usp_Set_Model_Year", action_TypeParameter, model_Year_Id, registration_YearParameter, make_IdParameter, model_IdParameter, offer_PriceParameter, sort_OrderParameter, is_ActiveParameter, created_DateParameter, created_ByParameter, modified_DateParameter, modified_ByParameter, audit_IdParameter, user_IPParameter, site_IdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_Set_Offer_Parameter_Select(string parameter_Type, Nullable<int> registration_Year, Nullable<int> make_Id)
        {
            var parameter_TypeParameter = parameter_Type != null ?
                new ObjectParameter("Parameter_Type", parameter_Type) :
                new ObjectParameter("Parameter_Type", typeof(string));
    
            var registration_YearParameter = registration_Year.HasValue ?
                new ObjectParameter("Registration_Year", registration_Year) :
                new ObjectParameter("Registration_Year", typeof(int));
    
            var make_IdParameter = make_Id.HasValue ?
                new ObjectParameter("Make_Id", make_Id) :
                new ObjectParameter("Make_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_Set_Offer_Parameter_Select", parameter_TypeParameter, registration_YearParameter, make_IdParameter);
        }
    
        public virtual ObjectResult<usp_Set_Question_Result> usp_Set_Question(Nullable<decimal> action_Type, ObjectParameter question_Id, string question, Nullable<short> sort_Order, Nullable<byte> is_Active, Nullable<System.DateTime> created_Date, Nullable<int> created_By, Nullable<System.DateTime> modified_Date, Nullable<int> modified_By, Nullable<long> audit_Id, string user_IP, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var questionParameter = question != null ?
                new ObjectParameter("Question", question) :
                new ObjectParameter("Question", typeof(string));
    
            var sort_OrderParameter = sort_Order.HasValue ?
                new ObjectParameter("Sort_Order", sort_Order) :
                new ObjectParameter("Sort_Order", typeof(short));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(byte));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Set_Question_Result>("usp_Set_Question", action_TypeParameter, question_Id, questionParameter, sort_OrderParameter, is_ActiveParameter, created_DateParameter, created_ByParameter, modified_DateParameter, modified_ByParameter, audit_IdParameter, user_IPParameter, site_IdParameter);
        }
    
        public virtual int usp_Set_Questioneer(Nullable<decimal> action_Type, ObjectParameter questioneer_Id, string questioneer_Description, Nullable<int> parent_Questioneer_Id, Nullable<short> sort_Order, Nullable<byte> is_Active, Nullable<System.DateTime> created_Date, Nullable<int> created_By, Nullable<System.DateTime> modified_Date, Nullable<int> modified_By, Nullable<long> audit_Id, string user_IP, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var questioneer_DescriptionParameter = questioneer_Description != null ?
                new ObjectParameter("Questioneer_Description", questioneer_Description) :
                new ObjectParameter("Questioneer_Description", typeof(string));
    
            var parent_Questioneer_IdParameter = parent_Questioneer_Id.HasValue ?
                new ObjectParameter("Parent_Questioneer_Id", parent_Questioneer_Id) :
                new ObjectParameter("Parent_Questioneer_Id", typeof(int));
    
            var sort_OrderParameter = sort_Order.HasValue ?
                new ObjectParameter("Sort_Order", sort_Order) :
                new ObjectParameter("Sort_Order", typeof(short));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(byte));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Set_Questioneer", action_TypeParameter, questioneer_Id, questioneer_DescriptionParameter, parent_Questioneer_IdParameter, sort_OrderParameter, is_ActiveParameter, created_DateParameter, created_ByParameter, modified_DateParameter, modified_ByParameter, audit_IdParameter, user_IPParameter, site_IdParameter);
        }
    
        public virtual int usp_Set_Questioneer_Detail(Nullable<decimal> action_Type, ObjectParameter questioneer_Detail_Id, Nullable<int> questioneer_Id, Nullable<int> question_Id, Nullable<int> answer_Id, Nullable<short> sort_Order, Nullable<byte> is_Active, Nullable<System.DateTime> created_Date, Nullable<int> created_By, Nullable<System.DateTime> modified_Date, Nullable<int> modified_By, Nullable<long> audit_Id, string user_IP, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var questioneer_IdParameter = questioneer_Id.HasValue ?
                new ObjectParameter("Questioneer_Id", questioneer_Id) :
                new ObjectParameter("Questioneer_Id", typeof(int));
    
            var question_IdParameter = question_Id.HasValue ?
                new ObjectParameter("Question_Id", question_Id) :
                new ObjectParameter("Question_Id", typeof(int));
    
            var answer_IdParameter = answer_Id.HasValue ?
                new ObjectParameter("Answer_Id", answer_Id) :
                new ObjectParameter("Answer_Id", typeof(int));
    
            var sort_OrderParameter = sort_Order.HasValue ?
                new ObjectParameter("Sort_Order", sort_Order) :
                new ObjectParameter("Sort_Order", typeof(short));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(byte));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Set_Questioneer_Detail", action_TypeParameter, questioneer_Detail_Id, questioneer_IdParameter, question_IdParameter, answer_IdParameter, sort_OrderParameter, is_ActiveParameter, created_DateParameter, created_ByParameter, modified_DateParameter, modified_ByParameter, audit_IdParameter, user_IPParameter, site_IdParameter);
        }
    
        public virtual int usp_Set_Questioneer_Result(Nullable<decimal> action_Type, ObjectParameter questioneer_Result_Id, Nullable<int> questioneer_Id, Nullable<int> sort_Order, Nullable<System.DateTime> created_Date, Nullable<int> created_By, Nullable<System.DateTime> modified_Date, Nullable<int> modified_By, Nullable<long> audit_Id, string user_IP, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var questioneer_IdParameter = questioneer_Id.HasValue ?
                new ObjectParameter("Questioneer_Id", questioneer_Id) :
                new ObjectParameter("Questioneer_Id", typeof(int));
    
            var sort_OrderParameter = sort_Order.HasValue ?
                new ObjectParameter("Sort_Order", sort_Order) :
                new ObjectParameter("Sort_Order", typeof(int));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Set_Questioneer_Result", action_TypeParameter, questioneer_Result_Id, questioneer_IdParameter, sort_OrderParameter, created_DateParameter, created_ByParameter, modified_DateParameter, modified_ByParameter, audit_IdParameter, user_IPParameter, site_IdParameter);
        }
    
        public virtual int usp_Set_Questioneer_Result_Detail(Nullable<decimal> action_Type, ObjectParameter questioneer_Result_Detail_Id, Nullable<int> questioneer_Result_Id, Nullable<int> question_Id, Nullable<int> answer_Id, Nullable<short> sort_Order, Nullable<byte> is_Active, Nullable<System.DateTime> created_Date, Nullable<int> created_By, Nullable<System.DateTime> modified_Date, Nullable<int> modified_By, Nullable<long> audit_Id, string user_IP, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var questioneer_Result_IdParameter = questioneer_Result_Id.HasValue ?
                new ObjectParameter("Questioneer_Result_Id", questioneer_Result_Id) :
                new ObjectParameter("Questioneer_Result_Id", typeof(int));
    
            var question_IdParameter = question_Id.HasValue ?
                new ObjectParameter("Question_Id", question_Id) :
                new ObjectParameter("Question_Id", typeof(int));
    
            var answer_IdParameter = answer_Id.HasValue ?
                new ObjectParameter("Answer_Id", answer_Id) :
                new ObjectParameter("Answer_Id", typeof(int));
    
            var sort_OrderParameter = sort_Order.HasValue ?
                new ObjectParameter("Sort_Order", sort_Order) :
                new ObjectParameter("Sort_Order", typeof(short));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(byte));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Set_Questioneer_Result_Detail", action_TypeParameter, questioneer_Result_Detail_Id, questioneer_Result_IdParameter, question_IdParameter, answer_IdParameter, sort_OrderParameter, is_ActiveParameter, created_DateParameter, created_ByParameter, modified_DateParameter, modified_ByParameter, audit_IdParameter, user_IPParameter, site_IdParameter);
        }
    
        public virtual ObjectResult<usp_Set_Questionnaire_Result> usp_Set_Questionnaire(Nullable<decimal> action_Type, ObjectParameter questionnaire_Id, string questionnaire_Description, Nullable<int> parent_Questionnaire_Id, Nullable<short> sort_Order, Nullable<byte> is_Active, Nullable<System.DateTime> created_Date, Nullable<int> created_By, Nullable<System.DateTime> modified_Date, Nullable<int> modified_By, Nullable<long> audit_Id, string user_IP, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var questionnaire_DescriptionParameter = questionnaire_Description != null ?
                new ObjectParameter("Questionnaire_Description", questionnaire_Description) :
                new ObjectParameter("Questionnaire_Description", typeof(string));
    
            var parent_Questionnaire_IdParameter = parent_Questionnaire_Id.HasValue ?
                new ObjectParameter("Parent_Questionnaire_Id", parent_Questionnaire_Id) :
                new ObjectParameter("Parent_Questionnaire_Id", typeof(int));
    
            var sort_OrderParameter = sort_Order.HasValue ?
                new ObjectParameter("Sort_Order", sort_Order) :
                new ObjectParameter("Sort_Order", typeof(short));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(byte));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Set_Questionnaire_Result>("usp_Set_Questionnaire", action_TypeParameter, questionnaire_Id, questionnaire_DescriptionParameter, parent_Questionnaire_IdParameter, sort_OrderParameter, is_ActiveParameter, created_DateParameter, created_ByParameter, modified_DateParameter, modified_ByParameter, audit_IdParameter, user_IPParameter, site_IdParameter);
        }
    
        public virtual ObjectResult<usp_Set_Questionnaire_Detail_Result> usp_Set_Questionnaire_Detail(Nullable<decimal> action_Type, ObjectParameter questionnaire_Detail_Id, Nullable<int> questionnaire_Id, Nullable<int> question_Id, Nullable<int> answer_Id, Nullable<short> sort_Order, Nullable<byte> is_Active, Nullable<System.DateTime> created_Date, Nullable<int> created_By, Nullable<System.DateTime> modified_Date, Nullable<int> modified_By, Nullable<long> audit_Id, string user_IP, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var questionnaire_IdParameter = questionnaire_Id.HasValue ?
                new ObjectParameter("Questionnaire_Id", questionnaire_Id) :
                new ObjectParameter("Questionnaire_Id", typeof(int));
    
            var question_IdParameter = question_Id.HasValue ?
                new ObjectParameter("Question_Id", question_Id) :
                new ObjectParameter("Question_Id", typeof(int));
    
            var answer_IdParameter = answer_Id.HasValue ?
                new ObjectParameter("Answer_Id", answer_Id) :
                new ObjectParameter("Answer_Id", typeof(int));
    
            var sort_OrderParameter = sort_Order.HasValue ?
                new ObjectParameter("Sort_Order", sort_Order) :
                new ObjectParameter("Sort_Order", typeof(short));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(byte));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Set_Questionnaire_Detail_Result>("usp_Set_Questionnaire_Detail", action_TypeParameter, questionnaire_Detail_Id, questionnaire_IdParameter, question_IdParameter, answer_IdParameter, sort_OrderParameter, is_ActiveParameter, created_DateParameter, created_ByParameter, modified_DateParameter, modified_ByParameter, audit_IdParameter, user_IPParameter, site_IdParameter);
        }
    
        public virtual ObjectResult<usp_Set_Questionnaire_Result_Result> usp_Set_Questionnaire_Result(Nullable<decimal> action_Type, ObjectParameter questionnaire_Result_Id, Nullable<int> questionnaire_Id, Nullable<int> sort_Order, Nullable<System.DateTime> created_Date, Nullable<int> created_By, Nullable<System.DateTime> modified_Date, Nullable<int> modified_By, Nullable<long> audit_Id, string user_IP, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var questionnaire_IdParameter = questionnaire_Id.HasValue ?
                new ObjectParameter("Questionnaire_Id", questionnaire_Id) :
                new ObjectParameter("Questionnaire_Id", typeof(int));
    
            var sort_OrderParameter = sort_Order.HasValue ?
                new ObjectParameter("Sort_Order", sort_Order) :
                new ObjectParameter("Sort_Order", typeof(int));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Set_Questionnaire_Result_Result>("usp_Set_Questionnaire_Result", action_TypeParameter, questionnaire_Result_Id, questionnaire_IdParameter, sort_OrderParameter, created_DateParameter, created_ByParameter, modified_DateParameter, modified_ByParameter, audit_IdParameter, user_IPParameter, site_IdParameter);
        }
    
        public virtual ObjectResult<usp_Set_Questionnaire_Result_Detail_Result> usp_Set_Questionnaire_Result_Detail(Nullable<decimal> action_Type, ObjectParameter questionnaire_Result_Detail_Id, Nullable<int> questionnaire_Result_Id, Nullable<int> question_Id, Nullable<int> answer_Id, Nullable<short> sort_Order, Nullable<byte> is_Active, Nullable<System.DateTime> created_Date, Nullable<int> created_By, Nullable<System.DateTime> modified_Date, Nullable<int> modified_By, Nullable<long> audit_Id, string user_IP, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var questionnaire_Result_IdParameter = questionnaire_Result_Id.HasValue ?
                new ObjectParameter("Questionnaire_Result_Id", questionnaire_Result_Id) :
                new ObjectParameter("Questionnaire_Result_Id", typeof(int));
    
            var question_IdParameter = question_Id.HasValue ?
                new ObjectParameter("Question_Id", question_Id) :
                new ObjectParameter("Question_Id", typeof(int));
    
            var answer_IdParameter = answer_Id.HasValue ?
                new ObjectParameter("Answer_Id", answer_Id) :
                new ObjectParameter("Answer_Id", typeof(int));
    
            var sort_OrderParameter = sort_Order.HasValue ?
                new ObjectParameter("Sort_Order", sort_Order) :
                new ObjectParameter("Sort_Order", typeof(short));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(byte));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Set_Questionnaire_Result_Detail_Result>("usp_Set_Questionnaire_Result_Detail", action_TypeParameter, questionnaire_Result_Detail_Id, questionnaire_Result_IdParameter, question_IdParameter, answer_IdParameter, sort_OrderParameter, is_ActiveParameter, created_DateParameter, created_ByParameter, modified_DateParameter, modified_ByParameter, audit_IdParameter, user_IPParameter, site_IdParameter);
        }
    
        public virtual ObjectResult<usp_Set_Site_Result> usp_Set_Site(Nullable<decimal> action_Type, ObjectParameter site_Id, string site_Name, Nullable<short> sort_Order, Nullable<byte> is_Active, Nullable<System.DateTime> created_Date, Nullable<int> created_By, Nullable<System.DateTime> modified_Date, Nullable<int> modified_By, Nullable<long> audit_Id, string user_IP)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var site_NameParameter = site_Name != null ?
                new ObjectParameter("Site_Name", site_Name) :
                new ObjectParameter("Site_Name", typeof(string));
    
            var sort_OrderParameter = sort_Order.HasValue ?
                new ObjectParameter("Sort_Order", sort_Order) :
                new ObjectParameter("Sort_Order", typeof(short));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(byte));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Set_Site_Result>("usp_Set_Site", action_TypeParameter, site_Id, site_NameParameter, sort_OrderParameter, is_ActiveParameter, created_DateParameter, created_ByParameter, modified_DateParameter, modified_ByParameter, audit_IdParameter, user_IPParameter);
        }
    
        public virtual ObjectResult<usp_Set_Site_Contact_Result> usp_Set_Site_Contact(Nullable<decimal> action_Type, ObjectParameter site_Contact_Id, Nullable<int> site_Id, Nullable<int> contact_Type_Id, Nullable<bool> is_Default, string user_Contact, Nullable<int> city_Id, Nullable<int> state_Id, Nullable<int> country_Id, string zip_Code, Nullable<short> sort_Order, Nullable<int> created_By, Nullable<System.DateTime> created_Date, Nullable<int> modified_By, Nullable<System.DateTime> modified_Date, Nullable<byte> is_Active, string user_IP, Nullable<long> audit_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            var contact_Type_IdParameter = contact_Type_Id.HasValue ?
                new ObjectParameter("Contact_Type_Id", contact_Type_Id) :
                new ObjectParameter("Contact_Type_Id", typeof(int));
    
            var is_DefaultParameter = is_Default.HasValue ?
                new ObjectParameter("Is_Default", is_Default) :
                new ObjectParameter("Is_Default", typeof(bool));
    
            var user_ContactParameter = user_Contact != null ?
                new ObjectParameter("User_Contact", user_Contact) :
                new ObjectParameter("User_Contact", typeof(string));
    
            var city_IdParameter = city_Id.HasValue ?
                new ObjectParameter("City_Id", city_Id) :
                new ObjectParameter("City_Id", typeof(int));
    
            var state_IdParameter = state_Id.HasValue ?
                new ObjectParameter("State_Id", state_Id) :
                new ObjectParameter("State_Id", typeof(int));
    
            var country_IdParameter = country_Id.HasValue ?
                new ObjectParameter("Country_Id", country_Id) :
                new ObjectParameter("Country_Id", typeof(int));
    
            var zip_CodeParameter = zip_Code != null ?
                new ObjectParameter("Zip_Code", zip_Code) :
                new ObjectParameter("Zip_Code", typeof(string));
    
            var sort_OrderParameter = sort_Order.HasValue ?
                new ObjectParameter("Sort_Order", sort_Order) :
                new ObjectParameter("Sort_Order", typeof(short));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(byte));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Set_Site_Contact_Result>("usp_Set_Site_Contact", action_TypeParameter, site_Contact_Id, site_IdParameter, contact_Type_IdParameter, is_DefaultParameter, user_ContactParameter, city_IdParameter, state_IdParameter, country_IdParameter, zip_CodeParameter, sort_OrderParameter, created_ByParameter, created_DateParameter, modified_ByParameter, modified_DateParameter, is_ActiveParameter, user_IPParameter, audit_IdParameter);
        }
    
        public virtual ObjectResult<usp_Set_State_Result> usp_Set_State(Nullable<decimal> action_Type, ObjectParameter state_Id, string state_Code, string state_Name, Nullable<int> country_Id, Nullable<byte> is_Active, Nullable<System.DateTime> created_Date, Nullable<int> created_By, Nullable<System.DateTime> modified_Date, Nullable<int> modified_By, Nullable<long> audit_Id, string user_IP, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var state_CodeParameter = state_Code != null ?
                new ObjectParameter("State_Code", state_Code) :
                new ObjectParameter("State_Code", typeof(string));
    
            var state_NameParameter = state_Name != null ?
                new ObjectParameter("State_Name", state_Name) :
                new ObjectParameter("State_Name", typeof(string));
    
            var country_IdParameter = country_Id.HasValue ?
                new ObjectParameter("Country_Id", country_Id) :
                new ObjectParameter("Country_Id", typeof(int));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(byte));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Set_State_Result>("usp_Set_State", action_TypeParameter, state_Id, state_CodeParameter, state_NameParameter, country_IdParameter, is_ActiveParameter, created_DateParameter, created_ByParameter, modified_DateParameter, modified_ByParameter, audit_IdParameter, user_IPParameter, site_IdParameter);
        }
    
        public virtual ObjectResult<usp_Set_Zip_Code_Result> usp_Set_Zip_Code(Nullable<decimal> action_Type, ObjectParameter zip_Id, string zip_Code, string zip_Type, Nullable<int> city_Id, Nullable<int> county_Id, Nullable<int> state_Id, Nullable<int> country_Id, string acceptable_Cities, string unacceptable_Cities, string time_Zone, string area_Codes, Nullable<decimal> latitude, Nullable<decimal> longitude, string world_Region, Nullable<bool> is_Decommissioned, Nullable<int> estimated_Population, string notes, Nullable<bool> is_Active, Nullable<System.DateTime> created_Date, Nullable<int> created_By, Nullable<System.DateTime> modified_Date, Nullable<int> modified_By, Nullable<long> audit_Id, string user_IP, Nullable<int> site_Id)
        {
            var action_TypeParameter = action_Type.HasValue ?
                new ObjectParameter("Action_Type", action_Type) :
                new ObjectParameter("Action_Type", typeof(decimal));
    
            var zip_CodeParameter = zip_Code != null ?
                new ObjectParameter("Zip_Code", zip_Code) :
                new ObjectParameter("Zip_Code", typeof(string));
    
            var zip_TypeParameter = zip_Type != null ?
                new ObjectParameter("Zip_Type", zip_Type) :
                new ObjectParameter("Zip_Type", typeof(string));
    
            var city_IdParameter = city_Id.HasValue ?
                new ObjectParameter("City_Id", city_Id) :
                new ObjectParameter("City_Id", typeof(int));
    
            var county_IdParameter = county_Id.HasValue ?
                new ObjectParameter("County_Id", county_Id) :
                new ObjectParameter("County_Id", typeof(int));
    
            var state_IdParameter = state_Id.HasValue ?
                new ObjectParameter("State_Id", state_Id) :
                new ObjectParameter("State_Id", typeof(int));
    
            var country_IdParameter = country_Id.HasValue ?
                new ObjectParameter("Country_Id", country_Id) :
                new ObjectParameter("Country_Id", typeof(int));
    
            var acceptable_CitiesParameter = acceptable_Cities != null ?
                new ObjectParameter("Acceptable_Cities", acceptable_Cities) :
                new ObjectParameter("Acceptable_Cities", typeof(string));
    
            var unacceptable_CitiesParameter = unacceptable_Cities != null ?
                new ObjectParameter("Unacceptable_Cities", unacceptable_Cities) :
                new ObjectParameter("Unacceptable_Cities", typeof(string));
    
            var time_ZoneParameter = time_Zone != null ?
                new ObjectParameter("Time_Zone", time_Zone) :
                new ObjectParameter("Time_Zone", typeof(string));
    
            var area_CodesParameter = area_Codes != null ?
                new ObjectParameter("Area_Codes", area_Codes) :
                new ObjectParameter("Area_Codes", typeof(string));
    
            var latitudeParameter = latitude.HasValue ?
                new ObjectParameter("Latitude", latitude) :
                new ObjectParameter("Latitude", typeof(decimal));
    
            var longitudeParameter = longitude.HasValue ?
                new ObjectParameter("Longitude", longitude) :
                new ObjectParameter("Longitude", typeof(decimal));
    
            var world_RegionParameter = world_Region != null ?
                new ObjectParameter("World_Region", world_Region) :
                new ObjectParameter("World_Region", typeof(string));
    
            var is_DecommissionedParameter = is_Decommissioned.HasValue ?
                new ObjectParameter("Is_Decommissioned", is_Decommissioned) :
                new ObjectParameter("Is_Decommissioned", typeof(bool));
    
            var estimated_PopulationParameter = estimated_Population.HasValue ?
                new ObjectParameter("Estimated_Population", estimated_Population) :
                new ObjectParameter("Estimated_Population", typeof(int));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            var is_ActiveParameter = is_Active.HasValue ?
                new ObjectParameter("Is_Active", is_Active) :
                new ObjectParameter("Is_Active", typeof(bool));
    
            var created_DateParameter = created_Date.HasValue ?
                new ObjectParameter("Created_Date", created_Date) :
                new ObjectParameter("Created_Date", typeof(System.DateTime));
    
            var created_ByParameter = created_By.HasValue ?
                new ObjectParameter("Created_By", created_By) :
                new ObjectParameter("Created_By", typeof(int));
    
            var modified_DateParameter = modified_Date.HasValue ?
                new ObjectParameter("Modified_Date", modified_Date) :
                new ObjectParameter("Modified_Date", typeof(System.DateTime));
    
            var modified_ByParameter = modified_By.HasValue ?
                new ObjectParameter("Modified_By", modified_By) :
                new ObjectParameter("Modified_By", typeof(int));
    
            var audit_IdParameter = audit_Id.HasValue ?
                new ObjectParameter("Audit_Id", audit_Id) :
                new ObjectParameter("Audit_Id", typeof(long));
    
            var user_IPParameter = user_IP != null ?
                new ObjectParameter("User_IP", user_IP) :
                new ObjectParameter("User_IP", typeof(string));
    
            var site_IdParameter = site_Id.HasValue ?
                new ObjectParameter("Site_Id", site_Id) :
                new ObjectParameter("Site_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Set_Zip_Code_Result>("usp_Set_Zip_Code", action_TypeParameter, zip_Id, zip_CodeParameter, zip_TypeParameter, city_IdParameter, county_IdParameter, state_IdParameter, country_IdParameter, acceptable_CitiesParameter, unacceptable_CitiesParameter, time_ZoneParameter, area_CodesParameter, latitudeParameter, longitudeParameter, world_RegionParameter, is_DecommissionedParameter, estimated_PopulationParameter, notesParameter, is_ActiveParameter, created_DateParameter, created_ByParameter, modified_DateParameter, modified_ByParameter, audit_IdParameter, user_IPParameter, site_IdParameter);
        }
    
        public virtual ObjectResult<Set_Make> GetMakes(string parameter_Type, Nullable<int> registration_Year, Nullable<int> make_Id)
        {
            var parameter_TypeParameter = parameter_Type != null ?
                new ObjectParameter("Parameter_Type", parameter_Type) :
                new ObjectParameter("Parameter_Type", typeof(string));
    
            var registration_YearParameter = registration_Year.HasValue ?
                new ObjectParameter("Registration_Year", registration_Year) :
                new ObjectParameter("Registration_Year", typeof(int));
    
            var make_IdParameter = make_Id.HasValue ?
                new ObjectParameter("Make_Id", make_Id) :
                new ObjectParameter("Make_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Set_Make>("GetMakes", parameter_TypeParameter, registration_YearParameter, make_IdParameter);
        }
    
        public virtual ObjectResult<Set_Make> GetMakes(string parameter_Type, Nullable<int> registration_Year, Nullable<int> make_Id, MergeOption mergeOption)
        {
            var parameter_TypeParameter = parameter_Type != null ?
                new ObjectParameter("Parameter_Type", parameter_Type) :
                new ObjectParameter("Parameter_Type", typeof(string));
    
            var registration_YearParameter = registration_Year.HasValue ?
                new ObjectParameter("Registration_Year", registration_Year) :
                new ObjectParameter("Registration_Year", typeof(int));
    
            var make_IdParameter = make_Id.HasValue ?
                new ObjectParameter("Make_Id", make_Id) :
                new ObjectParameter("Make_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Set_Make>("GetMakes", mergeOption, parameter_TypeParameter, registration_YearParameter, make_IdParameter);
        }
    
        public virtual ObjectResult<Set_Model> GetModels(string parameter_Type, Nullable<int> registration_Year, Nullable<int> make_Id)
        {
            var parameter_TypeParameter = parameter_Type != null ?
                new ObjectParameter("Parameter_Type", parameter_Type) :
                new ObjectParameter("Parameter_Type", typeof(string));
    
            var registration_YearParameter = registration_Year.HasValue ?
                new ObjectParameter("Registration_Year", registration_Year) :
                new ObjectParameter("Registration_Year", typeof(int));
    
            var make_IdParameter = make_Id.HasValue ?
                new ObjectParameter("Make_Id", make_Id) :
                new ObjectParameter("Make_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Set_Model>("GetModels", parameter_TypeParameter, registration_YearParameter, make_IdParameter);
        }
    
        public virtual ObjectResult<Set_Model> GetModels(string parameter_Type, Nullable<int> registration_Year, Nullable<int> make_Id, MergeOption mergeOption)
        {
            var parameter_TypeParameter = parameter_Type != null ?
                new ObjectParameter("Parameter_Type", parameter_Type) :
                new ObjectParameter("Parameter_Type", typeof(string));
    
            var registration_YearParameter = registration_Year.HasValue ?
                new ObjectParameter("Registration_Year", registration_Year) :
                new ObjectParameter("Registration_Year", typeof(int));
    
            var make_IdParameter = make_Id.HasValue ?
                new ObjectParameter("Make_Id", make_Id) :
                new ObjectParameter("Make_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Set_Model>("GetModels", mergeOption, parameter_TypeParameter, registration_YearParameter, make_IdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetYears(string parameter_Type, Nullable<int> registration_Year, Nullable<int> make_Id)
        {
            var parameter_TypeParameter = parameter_Type != null ?
                new ObjectParameter("Parameter_Type", parameter_Type) :
                new ObjectParameter("Parameter_Type", typeof(string));
    
            var registration_YearParameter = registration_Year.HasValue ?
                new ObjectParameter("Registration_Year", registration_Year) :
                new ObjectParameter("Registration_Year", typeof(int));
    
            var make_IdParameter = make_Id.HasValue ?
                new ObjectParameter("Make_Id", make_Id) :
                new ObjectParameter("Make_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetYears", parameter_TypeParameter, registration_YearParameter, make_IdParameter);
        }
    
        public virtual ObjectResult<CheckZipCode_Result> CheckZipCode(string zip_Code)
        {
            var zip_CodeParameter = zip_Code != null ?
                new ObjectParameter("Zip_Code", zip_Code) :
                new ObjectParameter("Zip_Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckZipCode_Result>("CheckZipCode", zip_CodeParameter);
        }
    
        public virtual ObjectResult<Set_Questionnaire_Detail> GetQuestionnaire(string parameter_Type, Nullable<int> registration_Year, Nullable<int> make_Id)
        {
            var parameter_TypeParameter = parameter_Type != null ?
                new ObjectParameter("Parameter_Type", parameter_Type) :
                new ObjectParameter("Parameter_Type", typeof(string));
    
            var registration_YearParameter = registration_Year.HasValue ?
                new ObjectParameter("Registration_Year", registration_Year) :
                new ObjectParameter("Registration_Year", typeof(int));
    
            var make_IdParameter = make_Id.HasValue ?
                new ObjectParameter("Make_Id", make_Id) :
                new ObjectParameter("Make_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Set_Questionnaire_Detail>("GetQuestionnaire", parameter_TypeParameter, registration_YearParameter, make_IdParameter);
        }
    
        public virtual ObjectResult<Set_Questionnaire_Detail> GetQuestionnaire(string parameter_Type, Nullable<int> registration_Year, Nullable<int> make_Id, MergeOption mergeOption)
        {
            var parameter_TypeParameter = parameter_Type != null ?
                new ObjectParameter("Parameter_Type", parameter_Type) :
                new ObjectParameter("Parameter_Type", typeof(string));
    
            var registration_YearParameter = registration_Year.HasValue ?
                new ObjectParameter("Registration_Year", registration_Year) :
                new ObjectParameter("Registration_Year", typeof(int));
    
            var make_IdParameter = make_Id.HasValue ?
                new ObjectParameter("Make_Id", make_Id) :
                new ObjectParameter("Make_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Set_Questionnaire_Detail>("GetQuestionnaire", mergeOption, parameter_TypeParameter, registration_YearParameter, make_IdParameter);
        }
    }
}
